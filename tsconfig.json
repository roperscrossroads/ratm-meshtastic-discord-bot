{\n  "compilerOptions": {\n    /* Visit https://aka.ms/tsconfig.json to read more about this file */\n    /* Basic Options */\n    // "incremental": true,                         /* Enable incremental compilation */\n    "target": "ES2015", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */\n    "module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,\n    // "lib": [],                                   /* Specify library files to be included in the compilation. */\n    // "allowJs": true,                             /* Allow javascript files to be compiled. */\n    // "checkJs": true,                             /* Report errors in .js files. */\n    // "jsx": "preserve",                           /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */\n    // "declaration": true,                         /* Generates corresponding '.d.ts' file. */\n    // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */\n    // "sourceMap": true,                           /* Generates corresponding '.map' file. */\n    // "outFile": "./",                             /* Concatenate and emit output to single file. */\n    // "outDir": "./",                              /* Redirect output structure to the directory. */\n    // "rootDir": "./",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */\n    // "composite": true,                           /* Enable project compilation */\n    // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */\n    // "removeComments": true,                      /* Do not emit comments to output. */\n    "noEmit": true /* Do not emit outputs. */,\n    // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */\n    // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */\n    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */\n    /* Strict Type-Checking Options */\n    "strict": true /* Enable all strict type-checking options. */,\n    // "noImplicitAny": true,                       /* Raise error on expressions and declarations with an implied 'any' type. */\n    // "strictNullChecks": true,                    /* Enable strict null checks. */\n    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */\n    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */\n    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */\n    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */\n    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */\n    /* Additional Checks */\n    // "noUnusedLocals": true,                      /* Report errors on unused locals. */\n    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */\n    // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */\n    // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */\n    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */\n    // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */\n    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */\n    /* Module Resolution Options */\n    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,\n    // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */\n    // "paths": {},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */\n    // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */\n    "typeRoots": [\n      "./node_modules/@types"\n    ] /* List of folders to include type definitions from. */,\n    // "types": [],                                 /* Type declaration files to be included in compilation. */\n    // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */\n    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,\n    // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */\n    // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */\n    /* Experimental Options */\n    // "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */\n    // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */\n    /* Advanced Options */\n    "skipLibCheck": true /* Skip type checking of declaration files. */,\n    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */\n  },\n  "exclude": ["node_modules", ".build"]\n}